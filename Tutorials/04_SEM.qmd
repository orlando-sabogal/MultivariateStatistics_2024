---
title: "Structural Equation Models (CFA)"
subtitle: "Tutorial"
date: "`r Sys.Date()`"
author: "Orlando Sabogal-Cardona"
theme:
  light: journal
  dark: darkly
format:
  html:
    toc: true
    toc_levels: 3
editor: visual
---

# Libraries

```{r}
library(tidyverse)
library(magrittr)

library(lavaan) # install.packages("lavaan")
```

# Linear model

```{r}
head(mtcars)
```

```{r}
Specification <- 'mpg ~ disp + hp + drat'
```

```{r}
lm(Specification, data = mtcars) %>% 
  summary()
```

```{r}
Model <- sem(model = Specification, data = mtcars)
```

```{r}
summary(Model, standardized  = TRUE)
```
# Path Analysis

## First example

```{r}
Specification <- '
    mpg ~ disp + hp + drat
    hp ~ qsec + vs + am
'
```

```{r}
Model <- sem(model = Specification, data = mtcars)
```

```{r}
summary(Model, standardized = TRUE, rsquare = TRUE,  fit.measures = TRUE)
```

```{r}
GoF = c("srmr", "rmsea", "tli", "cfi") 
fitmeasures(Model, fit.measures = GoF) 
```

## Second example

```{r}
Specification <- '
    mpg ~ disp + hp + drat
    hp ~ qsec + vs + am
    drat ~ vs + am
    
    drat ~~ disp
'
```

```{r}
Model <- sem(model = Specification, data = mtcars)
```

```{r}
summary(Model, standardized = TRUE, rsquare = TRUE,  fit.measures = TRUE)
```

# SEM

**PoliticalDemocracy** dataset 
https://lavaan.ugent.be/tutorial/sem.html

```{r}
PoliticalDemocracy
```



## Measurement Model

```{r}
model <- '

    ind60 =~ x1 + x2 + x3
    dem60 =~ y1 + y2 + y3 + y4
    dem65 =~ y5 + y6 + y7 + y8
'
```

```{r}
Model <- sem(model = model, data = PoliticalDemocracy)
```

```{r}
GoF = c("srmr", "rmsea", "tli", "cfi") 
fitmeasures(Model, fit.measures = GoF) 
```

```{r}
summary(Model, standardized = TRUE, rsquare = TRUE,  fit.measures = TRUE)
```



## Structural Model

```{r}
model <- '

    ind60 =~ x1 + x2 + x3
    dem60 =~ y1 + y2 + y3 + y4
    dem65 =~ y5 + y6 + y7 + y8
    
    dem60 ~ ind60
    dem65 ~ ind60 + dem60
'
```

```{r}
Model <- sem(model = model, data = PoliticalDemocracy)
```

```{r}
GoF = c("srmr", "rmsea", "tli", "cfi") 
fitmeasures(Model, fit.measures = GoF) 
```

```{r}
summary(Model, standardized = TRUE, rsquare = TRUE,  fit.measures = TRUE)
```