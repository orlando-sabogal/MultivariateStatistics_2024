---
title: "Principal Component Analysis (PCA)"
subtitle: "Tutorial"
date: "`r Sys.Date()`"
author: "Orlando Sabogal-Cardona"
theme:
  light: journal
  dark: darkly
format:
  html:
    toc: true
    toc_levels: 3
editor: visual
---

#Libraries and data

```{r}
library(tidyverse)
library(magrittr)

library(factoextra)
library(psych)
```

# First example

## Iris data

```{r}
names(iris)
```

```{r}
MyData <- iris %>% select(-Species)
```

## By hand

```{r}
summary(MyData)
```

```{r}
MyData_scaled <- scale(MyData)
head(MyData_scaled)
```

```{r}
Temp <- (MyData$Sepal.Length - mean(MyData$Sepal.Length))/sd(MyData$Sepal.Length)
head(Temp)
```

```{r}
# Compute the covariance matrix
cov_matrix <- cov(MyData_scaled)
cov_matrix
```

```{r}
# Eigen decomposition
eigen_results <- eigen(cov_matrix)
```

```{r}
eigen_results$values
```

```{r}
eigen_results$vectors
```

```{r}
# Compute the PCA scores
scores <- MyData_scaled %*% eigen_results$vectors
head(scores)
```

```{r}
# Eigenvalues and explained variance
eigenvalues <- eigen_results$values
var_explained <- eigenvalues / sum(eigenvalues) * 100  
pca_df <- data.frame(PC = 1:length(eigenvalues), Variance = var_explained)
pca_df$Cum <- cumsum(pca_df$Variance)
```

```{r}
# Create the scree plot
ggplot(pca_df, aes(x = PC, y = Variance)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  geom_line(aes(group = 1), color = "red") +
  geom_point(color = "red") + 
  scale_y_continuous(breaks = c(10, 20, 30, 40, 50, 60, 70),
                     labels = c("10%","20%", "30%", "40%", "50%", "60%", "70%")) +
labs(title = "Scree Plot", 
       x = "Principal Component", 
       y = "Percentage of Variance Explained") +
  theme_minimal() 

```

```{r}
ggplot(data = pca_df, aes(x = PC, y = Cum)) +
  geom_point() +
  geom_line() +
  scale_y_continuous(breaks = c(80, 90, 100),
                     labels = c("80%", "90%", "100%")) +
  labs(title = "PCA - Result", 
       x = "Principal Component", 
       y = "Percentage of Variance Explained") +
  theme_minimal() 

  
```

```{r}
scores <- as.data.frame(scores)
names(scores) <- c("PC1", "PC2", "PC3", "PC4")
head(scores)
```

```{r}
ggplot(data = scores) +
  geom_point(aes(x = PC1, y = PC2)) +
  labs(title = "PCA - Result", 
       x = "First Principal Component", 
       y = "Second Principal Component") +
  theme_minimal()
  
```

## prcomp

### prcomp (scale = FALSE)

```{r}
MyFirst_PCA <- prcomp(MyData)
```

```{r}
MyFirst_PCA
```

```{r}
str(MyFirst_PCA)
```

**\$rotation** is the matrix of the principal component loadings (eigenvectors). Each column of **rotation** contains coefficients for one principal component.

```{r}
MyFirst_PCA$rotation
```

The eigenvalues are a bit tricky. In **\$sdev** you will find the standard deviation of each principal component. It provides a measure of the amount of variation captured by each component. Remember that the igenvalues are associated with the variance of the components. Therefore, you only need to *\^2*

```{r}
MyFirst_PCA$sdev
```

```{r}
MyFirst_PCA$sdev^2
```

```{r}
MyFirst_PCA$sdev^2/sum(MyFirst_PCA$sdev^2)
```

```{r}
summary(MyFirst_PCA)
```

The **"scores"** of the components:

```{r}
MyFirst_PCA$x %>% head()
```

### prcomp (scale = TRUE)

```{r}
MyFirst_PCA <- prcomp(MyData, scale = TRUE)
```

```{r}
MyFirst_PCA
```

```{r}
MyFirst_PCA$rotation
```

```{r}
summary(MyFirst_PCA)
```

## princomp

```{r}
PCA_Results <- princomp(MyData, cor = TRUE, scores = TRUE)
```

```{r}
PCA_Results
```

```{r}
summary(PCA_Results)
```

```{r}
str(PCA_Results)
```

```{r}
PCA_Results$loadings
```

```{r}
PCA_Results$scores %>% head()
```

## prcomp vs princomp

The **prcomp()** function utilizes something calles Spectral Value Decomposition SVD. The **pincomp()** function utilizes Spectra Decomposition.

## factoextra

```{r}
MyFirst_PCA <- prcomp(MyData, scale = TRUE)
```

```{r}
fviz_eig(MyFirst_PCA)
```

```{r}
fviz_pca_ind(MyFirst_PCA)
```

```{r}
fviz_pca_var(MyFirst_PCA)
```

```{r}
fviz_pca_biplot(MyFirst_PCA,
                col.var = "red", 
                col.ind = "green")
```

## With psych

I personally see the **"principal()** function from the psych library as a way to bridge gaps between PCA and EFA. EFA is the next big topic we will disccuss.

But as of now, all you need to know is that the concepts of factor rotation and residual correlations are not common in PCA.

```{r}
PCA_psych <- principal(MyData, 
                       nfactors = 4, # why?
                       residuals = FALSE, # this is the default
                       rotate="varimax") # also the defauls
```

```{r}
PCA_psych
```

```{r}
PCA_psych$values
```

# Second example

```{r}
head(decathlon2)
```

Your turn!
